-- PUBLIC.USERS definition

-- Drop table

-- DROP TABLE PUBLIC.USERS;

CREATE TABLE PUBLIC.USERS (
	ID NUMERIC NOT NULL AUTO_INCREMENT,
	LOGIN CHARACTER VARYING(50) NOT NULL,
	NAME CHARACTER VARYING NOT NULL,
	DESCRIPTION CHARACTER VARYING NOT NULL,
	RELEASE_DATE DATE,
	DURATION INTEGER NOT NULL,
	RATING_ID INTEGER,
	CONSTRAINT USERS_PK PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX PRIMARY_KEY_4 ON PUBLIC.USERS (ID);


-- PUBLIC.RATINGS definition

-- Drop table

-- DROP TABLE PUBLIC.RATINGS;

CREATE TABLE PUBLIC.RATINGS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME INTEGER NOT NULL,
	CONSTRAINT RATINGS_PK PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX PRIMARY_KEY_6 ON PUBLIC.RATINGS (ID);


-- PUBLIC.GENRES definition

-- Drop table

-- DROP TABLE PUBLIC.GENRES;

CREATE TABLE PUBLIC.GENRES (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING,
	CONSTRAINT GENRES_PK PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX PRIMARY_KEY_7 ON PUBLIC.GENRES (ID);


-- PUBLIC.FRIENDSHIP definition

-- Drop table

-- DROP TABLE PUBLIC.FRIENDSHIP;

CREATE TABLE PUBLIC.FRIENDSHIP (
	USER_ID INTEGER NOT NULL,
	FRIEND_ID INTEGER,
	IS_CONFIRMED INTEGER,
	CONSTRAINT FRIENDSHIP_FK PRIMARY KEY (FRIEND_ID),
	CONSTRAINT FRIENDSHIP_FK_1 PRIMARY KEY (USER_ID),
	CONSTRAINT FRIENDSHIP_FK FOREIGN KEY (FRIEND_ID) REFERENCES PUBLIC.USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FRIENDSHIP_FK_1 FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE INDEX FRIENDSHIP_FK_1_INDEX_B ON PUBLIC.FRIENDSHIP (USER_ID);
CREATE INDEX FRIENDSHIP_FK_INDEX_B ON PUBLIC.FRIENDSHIP (FRIEND_ID);


-- PUBLIC.FILMS definition

-- Drop table

-- DROP TABLE PUBLIC.FILMS;

CREATE TABLE PUBLIC.FILMS (
	ID NUMERIC NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	DESCRIPTION CHARACTER VARYING(50) NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	ID_RATING INTEGER,
	CONSTRAINT FILMS_FK_1 PRIMARY KEY (ID,ID_RATING),
	CONSTRAINT FILMS_PK PRIMARY KEY (ID),
	CONSTRAINT FILMS_FK_1 FOREIGN KEY (ID_RATING) REFERENCES PUBLIC.RATINGS(ID) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE INDEX FILMS_FK_1_INDEX_3 ON PUBLIC.FILMS (ID_RATING);
CREATE UNIQUE INDEX PRIMARY_KEY_3 ON PUBLIC.FILMS (ID);


-- PUBLIC.FILMS_USERS_LIKES definition

-- Drop table

-- DROP TABLE PUBLIC.FILMS_USERS_LIKES;

CREATE TABLE PUBLIC.FILMS_USERS_LIKES (
	FILM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	CONSTRAINT FILMS_USERS_LIKES_FK PRIMARY KEY (FILM_ID),
	CONSTRAINT FILMS_USERS_LIKES_FK_1 PRIMARY KEY (USER_ID),
	CONSTRAINT FILMS_USERS_LIKES_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FILMS_USERS_LIKES_FK_1 FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE INDEX FILMS_USERS_LIKES_FK_1_INDEX_D ON PUBLIC.FILMS_USERS_LIKES (USER_ID);
CREATE INDEX FILMS_USERS_LIKES_FK_INDEX_D ON PUBLIC.FILMS_USERS_LIKES (FILM_ID);


-- PUBLIC.FILMS_GENRES definition

-- Drop table

-- DROP TABLE PUBLIC.FILMS_GENRES;

CREATE TABLE PUBLIC.FILMS_GENRES (
	FILM_ID INTEGER,
	GENRE_ID INTEGER,
	CONSTRAINT FILMS_GENRES_FK PRIMARY KEY (FILM_ID),
	CONSTRAINT FILMS_GENRES_FK_GENRE PRIMARY KEY (GENRE_ID),
	CONSTRAINT FILMS_GENRES_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FILMS_GENRES_FK_GENRE FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRES(ID) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE INDEX FILMS_GENRES_FK_GENRE_INDEX_7 ON PUBLIC.FILMS_GENRES (GENRE_ID);
CREATE INDEX FILMS_GENRES_FK_INDEX_7 ON PUBLIC.FILMS_GENRES (FILM_ID);