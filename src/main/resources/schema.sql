-- PUBLIC.GENRES definition

-- Drop table

-- DROP TABLE GENRES;

CREATE  TABLE IF NOT EXISTS GENRES (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING,
	CONSTRAINT GENRES_PK PRIMARY KEY (ID)
);



CREATE TABLE  IF NOT EXISTS MPA (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50),
	CONSTRAINT MPA_PK PRIMARY KEY (ID)
);


-- PUBLIC.USERS definition

-- Drop table

-- DROP TABLE USERS;

CREATE TABLE IF NOT EXISTS USERS (
	ID NUMERIC NOT NULL AUTO_INCREMENT,
	LOGIN CHARACTER VARYING(50) NOT NULL,
	NAME CHARACTER VARYING NOT NULL,
	BIRTHDAY DATE,
	EMAIL CHARACTER VARYING,
	CONSTRAINT USERS_PK PRIMARY KEY (ID)
);

-- PUBLIC.FILMS definition

-- Drop table

-- DROP TABLE FILMS;

CREATE TABLE IF NOT EXISTS FILMS (
	ID NUMERIC NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(50) NOT NULL,
	DESCRIPTION CHARACTER VARYING(50) NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	ID_RATING INTEGER,
	RATE INTEGER,
	CONSTRAINT FILMS_PK PRIMARY KEY (ID),
	CONSTRAINT FILMS_FK_1 FOREIGN KEY (ID_RATING) REFERENCES MPA(ID) ON DELETE CASCADE ON UPDATE CASCADE
);


-- PUBLIC.FILMS_GENRES definition

-- Drop table

-- DROP TABLE FILMS_GENRES;

CREATE TABLE IF NOT EXISTS FILMS_GENRES (
	FILM_ID INTEGER,
	GENRE_ID INTEGER,
	CONSTRAINT FILMS_GENRES_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FILMS_GENRES_FK_GENRE FOREIGN KEY (GENRE_ID) REFERENCES GENRES(ID) ON DELETE CASCADE ON UPDATE CASCADE
);


-- PUBLIC.FILMS_USERS_LIKES definition

-- Drop table

-- DROP TABLE FILMS_USERS_LIKES;

CREATE TABLE IF NOT EXISTS FILMS_USERS_LIKES (
	FILM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	CONSTRAINT FILMS_USERS_LIKES_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FILMS_USERS_LIKES_FK_1 FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE
);


-- PUBLIC.FRIENDSHIP definition

-- Drop table

-- DROP TABLE FRIENDSHIP;

CREATE  TABLE IF NOT EXISTS FRIENDSHIP (
	USER_ID INTEGER NOT NULL,
	FRIEND_ID INTEGER,
	IS_CONFIRMED BOOLEAN,
	CONSTRAINT FRIENDSHIP_FK FOREIGN KEY (FRIEND_ID) REFERENCES USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FRIENDSHIP_FK_1 FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO MPA
(NAME)
VALUES('G'), ('PG'), ('PG-13'), ('R'), ('NC-17');

INSERT INTO GENRES (NAME) VALUES('Комедия'),('Драма'),('Мультфильм'),('Триллер'),('Документальный'),('Боевик')
